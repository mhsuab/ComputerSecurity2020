'''
IDA Python

SOMETHING like this

from ctypes import *

fib = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 512559680, 3483774753, 3996334433, 3185141890, 2886509027, 1776683621, 368225352, 2144908973, 2513134325, 363076002, 2876210327, 3239286329, 1820529360, 764848393, 2585377753, 3350226146, 1640636603, 695895453, 2336532056, 3032427509, 1073992269, 4106419778, 885444751, 696897233, 1582341984, 2279239217, 3861581201, 1845853122, 1412467027, 3258320149, 375819880, 3634140029, 4009959909, 3349132642, 3064125255, 2118290601, 887448560, 3005739161, 3893187721, 2603959586, 2202180011, 511172301, 2713352312, 3224524613, 1642909629, 572466946, 2215376575, 2787843521, 708252800, 3496096321, 4204349121, 3405478146, 3314859971, 2425370821, 1445263496, 3870634317, 1020930517, 596597538, 1617528055, 2214125593, 3831653648, 1750811945, 1287498297, 3038310242, 30841243, 3069151485, 3099992728, 1874176917, 679202349, 2553379266, 3232581615, 1490993585, 428607904, 1919601489, 2348209393, 4267810882, 2321052979, 2293896565, 319982248, 2613878813, 2933861061, 1252772578, 4186633639, 1144438921, 1036105264, 2180544185, 3216649449, 1102226338, 23908491, 1126134829, 1150043320, 2276178149, 3426221469, 1407432322, 538686495, 1946118817, 2484805312, 135956833, 2620762145, 2756718978, 1082513827, 3839232805, 626779336, 171044845, 797824181, 968869026, 1766693207, 2735562233, 207288144, 2942850377, 3150138521, 1798021602, 653192827, 2451214429, 3104407256, 1260654389, 70094349, 1330748738, 1400843087, 2731591825, 4132434912, 2569059441, 2406527057, 680619202, 3087146259, 3767765461, 2559944424, 2032742589, 297719717, 2330462306, 2628182023, 663677033, 3291859056, 3955536089, 2952427849, 2612996642, 1270457195, 3883453837, 858943736, 447430277, 1306374013, 1753804290, 3060178303, 519015297, 3579193600, 4098208897, 3382435201, 3185676802, 2273144707, 1163854213, 3436998920, 305885837, 3742884757, 4048770594, 3496688055]

def v1(c, token):
    for i in range(c.len):
        token[c.check + i] = chr(c.v_data[i]//0x87)

def v2(c, token):
    for i in range(c.len):
        tmp = c.v_data[i] //13 *2 
        tmp += 1 if c.v_data[i] % 13 else 0
        token[c.check + i] = chr(tmp)

def v3(c, token):
    for i in range(c.len):
        token[c.check + i] = chr(c.v_data[i] ^ 0x52756279)

def v4(c, token):
    for i in range(c.len):
        magic = 0xfac0b00c
        delta = magic - c.v_data[i]
        tmp = delta // (0x78 + 0x7788) * 2
        tmp += 1 if delta%(0x78 + 0x7788) else 0
        token[c.check + i] = chr(tmp)

def v5(c, token):
    for i in range(c.len):
        token[c.check + i] = chr(fib.index(c.v_data[i]))

class node(Structure):
    _pack_ = 8
    _fields_ = [
        ('func_a0', c_uint64),
        ('input', c_uint32),
        ('a3', c_uint32),
        ('func_a4', c_uint32),
        ('check', c_uint32),
        ('len', c_uint32),
        ('v_data', c_uint32*3)
    ]
print (sizeof(node))
adr = idc.LocByName("stru_6D5100")
func = []
checklist = []

while i < 70:
    checklist.append(node.from_buffer_copy(idc.GetManyBytes(adr, 40)))
    peek = checklist[-1]
    func.append(hex(peek.func_a4 + peek.func_a0)[:-1])
    adr += sizeof(node)
    i += peek.len

token = [''] * 100
for c in checklist:
    if (c.func_a4 + c.func_a0) == 0x401138:
        v4(c, token)
    elif (c.func_a4 + c.func_a0) == 0x400fbe:
        v1(c, token)
    elif (c.func_a4 + c.func_a0) == 0x40102d:
        v2(c, token)
    elif (c.func_a4 + c.func_a0) == 0x4011d6:
          v5(c, token)
    elif (c.func_a4 + c.func_a0) == 0x4010c8:
        v3(c, token)
    else: raise Error
    print (token)
print (''.join(token))
'''